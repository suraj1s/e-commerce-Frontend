@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* background */
  --background-800: rgb(88, 54, 164);
  /* Color Primary */
  --primary-100: rgba(244, 235, 255, 1);
  --primary-500: rgba(158, 119, 237, 1);
  --primary-600: rgba(127, 86, 217, 1);
  --primary-700: rgba(105, 65, 198, 1);
  /* Color gray */
  --gray-25: rgba(252, 252, 253, 1);
  --gray-50: rgba(249, 250, 251, 1);
  --gray-100: rgba(242, 244, 247, 1);
  --gray-200: rgba(234, 236, 240, 1);
  --gray-300: rgba(208, 213, 221, 1);
  --gray-400: rgba(152, 162, 179, 1);
  --gray-500: rgba(102, 112, 133, 1);
  --gray-600: rgba(71, 84, 103, 1);
  --gray-700: rgba(52, 64, 84, 1);
  --gray-800: rgba(29, 41, 57, 1);
  --gray-900: rgba(16, 24, 40, 1);
  /* Colour blue */
  --blue-light-50: rgba(240, 249, 255, 1);
  --blue-light-600: rgba(0, 134, 201, 1);
  --blue-light-700: rgba(2, 106, 162, 1);
  --blue-gray-600: rgba(62, 71, 132, 1);
  /* Colour orange */
  --orange-600: rgba(236, 74, 10, 1);
  /* Colour pink */
  --pink-50: rgba(253, 242, 250, 1);
  --pink-600: rgba(221, 37, 144, 1);
  --pink-700: rgba(193, 21, 116, 1);
  /*Indigo */
  --indigo-50:rgba(238, 244, 255, 1);
  --indigo-700: rgba(53, 56, 205, 1);
  /* Color success */
  --success-50: rgba(236, 253, 243, 1);
  --success-500: rgba(18, 183, 106, 1);
  --success-600: rgba(3, 152, 85, 1);
  --success-700: rgba(2, 122, 72, 1);
  /* Color error */
  --error-50: rgba(254, 243, 242, 1);
  --error-500: rgba(240, 68, 56, 1);
  --error-600: rgba(217, 45, 32, 1);
  --error-700: rgba(180, 35, 24, 1);
  --error-50: rgba(254, 243, 242, 1);

  /* warning */
  --warning-50: rgba(255, 250, 235, 1);
  --warning-100: rgba(254, 240, 199, 1);
  --warning-600: rgba(220, 104, 3, 1);
  --warning-700: rgba(181, 71, 8, 1);
  /* indigo */
  --indigo-50: rgba(238, 244, 255, 1);
  --indigo-700: rgba(53, 56, 205, 1);
}

@media (prefers-color-scheme: dark) {
  :root {
  }
}

* {
  scroll-behavior: smooth !important;
  border-color: #eaecf0;
}


/* Scrollbar start */

.hide-sidebar::-webkit-scrollbar {
  display: none;
}

::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}
::-webkit-scrollbar-track {
  background: var(--gray-200);
}
::-webkit-scrollbar-thumb {
  background: var(--gray-300);
}
::-webkit-scrollbar-thumb:hover {
  background: var(--gray-400);
}
/* Scrollbar End */

.pageContainer {
  @apply px-4 sm:px-8 md:px-12 lg:pl-[50px] lg:pr-[79px];
}

.spinner {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: 3.8px solid;
  border-color: #dbdcef;
  border-right-color: #5d659e;
  animation: spinner-d3wgkg 0.6s infinite linear;
}

@keyframes spinner-d3wgkg {
  to {
    transform: rotate(1turn);
  }
}

.popupmodalblur {
  background: rgba(18, 18, 18, 0.3);
  background: color(display-p3 0.0706 0.0706 0.0706 / 0.3);
  backdrop-filter: blur(2.5px);
}

/* CustomSwitchToggler */
.toggle-checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.toggle-slot {
  font-size: 6px;
  position: relative;
  height: 3.5em;
  width: 7em;
  border: 0px solid transparent;
  border-radius: 10em;
  background-color: #cacaca;
  transition: background-color 250ms;
}

.toggle-checkbox:checked ~ .toggle-slot {
  background-color: #039855;
}

.toggle-button {
  transform: translate(0.3em, 0.25em);
  position: absolute;
  height: 3em;
  width: 3em;
  border-radius: 50%;
  background-color: white;
  box-shadow: inset 0px 0px 0px 0.75em white;
  transition:
    background-color 250ms,
    border-color 250ms,
    transform 500ms cubic-bezier(0.26, 2, 0.46, 0.71);
}

.toggle-checkbox:checked ~ .toggle-slot .toggle-button {
  background-color: white;
  box-shadow: inset 0px 0px 0px 0.75em white;
  transform: translate(3.65em, 0.25em);
}
/* CustomSwitchToggler */

.outline-button {
  @apply w-fit bg-white border !text-gray-700 border-gray-300
}

/* checkbox  */
/* Hide the default checkbox */
.containerForCheckBox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.containerForCheckBox {
  display: flex;
  gap: 10px;
}


/* Create a custom checkbox */
.checkmark {
  position: relative;
  box-shadow: var(--gray-300) 0px 0px 0px 2px;
  height: 16px;
  width: 16px;
  margin-right: 10px;
  flex-shrink: 0;
  margin-top: -1px;
  transition: all 0.2s ease 0s;
  cursor: pointer;
  transform-origin: 0px 10px;
  border-radius: 4px;
  margin: -1px 10px 0px 0px;
  padding: 0px;
  box-sizing: border-box;
}

.containerForCheckBox input:checked ~ .checkmark {
  box-shadow: var(--brand-600) 0px 0px 0px 2px;
  background-color: var(--brand-100);
  height: 16px;
  width: 16px;
  margin-right: 10px;
  flex-shrink: 0;
  margin-top: -1px;
  transition: all 0.2s ease 0s;
  cursor: pointer;
  transform-origin: 0px 10px;
  border-radius: 4px;
  margin: -1px 10px 0px 0px;
  padding: 0px;
  box-sizing: border-box;
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.containerForCheckBox input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.containerForCheckBox .checkmark:after {
  inset: 0px 0px 0px 0px;
  top: 1.5px;
  left: 5.5px;
  width: 0.35em;
  height: 0.7em;
  border: solid var(--brand-600);
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
  transition: all 500ms ease-in-out;
}
